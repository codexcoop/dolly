<% content_for :javascripts do %>
  <%= javascript_include_tag 'sort_setup' %>
  <%= javascript_include_tag 'sort_terms' %>
<% end -%>

<h2>
  <%= t :page_title, :scope => [:terms, :index] %>
  <q><%= t :one, :scope => [:activerecord, :models, @vocabulary.name.tableize.singularize.to_sym] %></q>
</h2>

<% if @vocabulary.is_user_editable? -%>
  <p><%= link_to  t( :insert_new, :scope => [:terms, :index] ) +
                  t(:one, :scope => [:activerecord, :models, @vocabulary.name.tableize.singularize.to_sym] ),
                  new_vocabulary_term_path(@vocabulary), :class => 'new' %> </p>
<% end -%>

<p><%= link_to t(:all_vocabularies_link, :scope => [:terms, :index]), vocabularies_path %></p>

<ul id="sortable">

    <!--
    <li>
      <th><%#= t :code, :scope => [:activerecord, :attributes, :term] %></th>
      <th><%#= t :it, :scope => [:activerecord, :attributes, :term] %></th>
      <th><%#= t :en, :scope => [:activerecord, :attributes, :term] %></th>
      <th><%#= t :uuid, :scope => [:activerecord, :attributes, :term] %></th>
      <th><%#= t :is_native, :scope => [:activerecord, :attributes, :term] %></th>
      <th></th>
    </li>
    -->

    <% @terms.each do |term| %>
      <%
        content = []
        content << link_to(term.code, edit_vocabulary_term_path(@vocabulary, term)) if term.code.present?
        content << link_to(term.it, edit_vocabulary_term_path(@vocabulary, term)) if term.it.present?
        content << link_to(term.en, edit_vocabulary_term_path(@vocabulary, term)) if term.en.present?
        content << h("#{term.uuid[0..7]}...")
        content << h(t( (term.is_native? ? :yes_text : :no_text ), :scope => [:application] ))
        content << link_to("[elimina]", [@vocabulary, term], :confirm => t(:confirm_deletion, :scope => [:application]), :method => :delete)
      -%>
      <li id="term_<%= term.id %>" data-handle="handle-for-sort" data-term-id="<%= term.id %>">
        <p> <%= content.compact.join(', ') %> </p>
      </li>
    <% end %>

</ul>

